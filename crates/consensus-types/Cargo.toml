[package]
name = "webb-consensus-types"
version = "0.1.0"
authors = ["Webb Developers"]
edition = "2021"

[dependencies]
eth-types = { path = "../eth-types", default-features = false, features = ["eth2"] }
eth2-ssz = { package = "webb-eth2-ssz", path = "../ssz", default-features = false }
eth2-ssz-derive = { package = "webb-eth2-ssz-derive", path = "../ssz-derive", default-features = false }
tree-hash = { package = "webb-tree-hash", path = "../tree-hash", default-features = false }
tree-hash-derive = { package = "webb-tree-hash-derive", path = "../tree-hash-derive", default-features = false }
merkle-proof = { package = "webb-merkle-proof", path = "../merkle-proof", default-features = false }
eth2-serde-utils = { package = "webb-eth2-serde-utils", path = "../serde-utils", default-features = false }

serde = { workspace = true }
rlp = { workspace = true }
rlp-derive = { workspace = true }
derive_more = { workspace = true }
tiny-keccak = { workspace = true }
hex = { workspace = true }
codec = { workspace = true }
scale-info = { workspace = true }
ethereum-types = { workspace = true, features = ["codec", "rlp", "serialize"] }
bitvec = { workspace = true, default-features = false, features = ["atomic", "alloc"] }


[features]
default = ["std"]
std = [
    "tree-hash/std",
    "eth-types/std",
    "bitvec/std",
    "merkle-proof/std",
    "codec/std",
    "scale-info/std",
    "ethereum-types/std",
]
arbitrary = [
    "ethereum-types/arbitrary",
    "eth2-ssz/arbitrary",
    "tree-hash/arbitrary",
]